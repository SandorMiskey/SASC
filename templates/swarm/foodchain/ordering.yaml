#
# Copyright TE-FOOD International Corp., All Rights Reserved.
#
#

version: '3'

networks:
    swarmnet:
        external:
            name: ${NETWORK}

#volumes:
#    orderer1.${NETWORK}.foodchain.te-food.com:
#    orderer2.${NETWORK}.foodchain.te-food.com:

services:

    orderer1:
        image: hyperledger/fabric-orderer:$IMAGE_TAG
        hostname: orderer1.${NETWORK}.foodchain.te-food.com
        networks:
            swarmnet:
                aliases:
                    - orderer1.${NETWORK}.foodchain.te-food.com
        volumes:                                                                                                                                                                                                
            - ${ARTIFACTS}/genesis.block:/var/hyperledger/orderer/orderer.genesis.block
            - ${CRYPTO}/ordererOrganizations/${NETWORK}.foodchain.te-food.com/orderers/orderer1.${NETWORK}.foodchain.te-food.com/msp:/var/hyperledger/orderer/msp
            - ${CRYPTO}/ordererOrganizations/${NETWORK}.foodchain.te-food.com/orderers/orderer1.${NETWORK}.foodchain.te-food.com/tls/:/var/hyperledger/orderer/tls
            - ${DATA}/orderer/orderer1:/var/hyperledger/production
        environment:
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${NETWORK}
            #- ORDERER_GENERAL_LOGLEVEL=debug
            - ORDERER_GENERAL_LOGLEVEL=INFO
            - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
            - ORDERER_GENERAL_GENESISMETHOD=file
            - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/orderer/orderer.genesis.block
            - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
            - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp
            # enabled TLS
            - ORDERER_GENERAL_TLS_ENABLED=true
            - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key
            - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt
            - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
            # kafka
            - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
            - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
            - ORDERER_KAFKA_VERBOSE=true
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric
        command: orderer
        deploy:                                                                                                                                                                                                
            replicas: 1
            placement:
                constraints: [node.hostname == $SWARM_MANAGER]
            restart_policy:
                condition: any 
                delay: 5s

    orderer2:
        image: hyperledger/fabric-orderer:$IMAGE_TAG
        hostname: orderer2.${NETWORK}.foodchain.te-food.com
        networks:
            swarmnet:
                aliases:
                    - orderer2.${NETWORK}.foodchain.te-food.com
        volumes:                                                                                                                                                                                                
            - ${ARTIFACTS}/genesis.block:/var/hyperledger/orderer/orderer.genesis.block
            - ${CRYPTO}/ordererOrganizations/${NETWORK}.foodchain.te-food.com/orderers/orderer2.${NETWORK}.foodchain.te-food.com/msp:/var/hyperledger/orderer/msp
            - ${CRYPTO}/ordererOrganizations/${NETWORK}.foodchain.te-food.com/orderers/orderer2.${NETWORK}.foodchain.te-food.com/tls/:/var/hyperledger/orderer/tls
            - ${DATA}/orderer/orderer2:/var/hyperledger/production
        environment:
            - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${NETWORK}
            #- ORDERER_GENERAL_LOGLEVEL=debug
            - ORDERER_GENERAL_LOGLEVEL=INFO
            - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
            - ORDERER_GENERAL_GENESISMETHOD=file
            - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/orderer/orderer.genesis.block
            - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
            - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp
            # enabled TLS
            - ORDERER_GENERAL_TLS_ENABLED=true
            - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key
            - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt
            - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
            # kafka
            - ORDERER_KAFKA_RETRY_SHORTINTERVAL=1s
            - ORDERER_KAFKA_RETRY_SHORTTOTAL=30s
            - ORDERER_KAFKA_VERBOSE=true
        working_dir: /opt/gopath/src/github.com/hyperledger/fabric
        command: orderer
        deploy:                                                                                                                                                                                                
            replicas: 1
            placement:
                constraints: [node.hostname == $SWARM_MANAGER]
            restart_policy:
                condition: any 
                delay: 5s

