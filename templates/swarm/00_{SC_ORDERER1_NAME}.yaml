version: '3.7'

# networks:
#   swarmnet:
#     external:                                                                                                                                                                                                                                                               
#       name: ${SC_NETWORK_NAME}
networks:
  ${SC_NETWORK_NAME}:
    name: ${SC_NETWORK_NAME}


services:

  ${SC_ORDERER1_O1_NAME}:
    image: hyperledger/fabric-orderer:${SC_VERSION_FABRIC}
    labels:
      service: hyperledger-fabric
    environment:
      - FABRIC_LOGGING_SPEC=${SC_FABRIC_LOGLEVEL}
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_LISTENPORT=${SC_ORDERER1_O1_PORT}
      - ORDERER_GENERAL_LOCALMSPID=${SC_ORDERER1_NAME}MSP
      - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp
      # enabled TLS
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
      - ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_CLUSTER_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
      - ORDERER_GENERAL_BOOTSTRAPMETHOD=none
      - ORDERER_CHANNELPARTICIPATION_ENABLED=true
      - ORDERER_ADMIN_TLS_ENABLED=true
      - ORDERER_ADMIN_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_ADMIN_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_ADMIN_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
      - ORDERER_ADMIN_TLS_CLIENTROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
      - ORDERER_ADMIN_LISTENADDRESS=0.0.0.0:${SC_ORDERER1_O1_ADMINPORT}
      - ORDERER_OPERATIONS_LISTENADDRESS=${SC_ORDERER1_O1_FQDN}:${SC_ORDERER1_O1_OPPORT}
      - ORDERER_METRICS_PROVIDER=prometheus
    working_dir: /root
    command: orderer
    volumes:
      - ${SC_PATH_ORGS}/ordererOrganizations/${SC_ORDERER1_DOMAIN}/orderers/${SC_ORDERER1_O1_FQDN}/msp:/var/hyperledger/orderer/msp
      - ${SC_PATH_ORGS}/ordererOrganizations/${SC_ORDERER1_DOMAIN}/orderers/${SC_ORDERER1_O1_FQDN}/tls/:/var/hyperledger/orderer/tls
      - ${SC_PATH_CHAINS}/${SC_ORDERER1_NAME}/${SC_ORDERER1_O1_NAME}:/var/hyperledger/production/orderer
      - ${SC_PATH_ARTIFACTS}/${SC_CHANNEL_NAME}-genesis.block:/var/hyperledger/orderer/${SC_CHANNEL_NAME}-genesis.block
    ports:
      - ${SC_ORDERER1_O1_PORT}:${SC_ORDERER1_O1_PORT}
      - ${SC_ORDERER1_O1_ADMINPORT}:${SC_ORDERER1_O1_ADMINPORT}
      - ${SC_ORDERER1_O1_OPPORT}:${SC_ORDERER1_O1_OPPORT}
    networks:
      - ${SC_NETWORK_NAME}
    deploy:                                                                                                                                                                                                
      replicas: 1
      placement:
        constraints: [node.hostname == ${SC_ORDERER1_O1_WORKER}]
      restart_policy:
        condition: any 
        delay: 5s
    hostname: ${SC_ORDERER1_O1_FQDN}
    # container_name: ${SC_ORDERER1_O1_FQDN}
    # networks:
    #   ${SC_NETWORK_NAME}:
    #     aliases:
    #       - ${SC_ORDERER1_O1_FQDN}
