version: '3.7'

networks:
  ${SC_NETWORK_NAME}:
    name: ${SC_NETWORK_NAME}
    external: true

services:

  # region: P1 + C1

  ${SC_ORG1_P1_NAME}:
    command: peer node start
    depends_on:
      - ${SC_ORG1_C1_FQDN}
    deploy:                                                                                                                                                                                                
      placement:
        constraints: [ node.hostname == ${SC_ORG1_P1_WORKER} ]
      replicas: 1
      restart_policy:
        condition: any 
        delay: ${SC_SWARM_DELAY}s
        max_attempts: 5
    environment:
      - FABRIC_CFG_PATH=/etc/hyperledger/peercfg
      - FABRIC_LOGGING_SPEC=${SC_FABRIC_LOGLEVEL}
      #- FABRIC_LOGGING_SPEC=DEBUG
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_PROFILE_ENABLED=false
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      # Peer specific variables
      - CORE_PEER_ID=${SC_ORG1_P1_FQDN}
      - CORE_PEER_ADDRESS=${SC_ORG1_P1_FQDN}:${SC_ORG1_P1_PORT}
      - CORE_PEER_LISTENADDRESS=0.0.0.0:${SC_ORG1_P1_PORT}
      - CORE_PEER_CHAINCODEADDRESS=${SC_ORG1_P1_FQDN}:${SC_ORG1_P1_CHAINPORT}
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:${SC_ORG1_P1_CHAINPORT}
      - CORE_PEER_GOSSIP_BOOTSTRAP=${SC_ORG1_P1_FQDN}:${SC_ORG1_P1_PORT}
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=${SC_ORG1_P1_FQDN}:${SC_ORG1_P1_PORT}
      - CORE_PEER_LOCALMSPID=${SC_ORG1_NAME}MSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/msp
      - CORE_OPERATIONS_LISTENADDRESS=0.0.0.0:${SC_ORG1_P1_OPPORT}
      - CORE_METRICS_PROVIDER=prometheus
      - CHAINCODE_AS_A_SERVICE_BUILDER_CONFIG={"peername":"${SC_ORG1_P1_NAME}${SC_ORG1_NAME}."}
      - CORE_CHAINCODE_EXECUTETIMEOUT=300s

      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=${SC_ORG1_C1_FQDN}:5984
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=${SC_COUCHDB_USER}
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=${SC_COUCHDB_PASSWORD}

      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${SC_NETWORK_NAME}
    hostname: ${SC_ORG1_P1_FQDN}
    image: hyperledger/fabric-peer:${SC_VERSION_FABRIC}
    labels:
      service: hyperledger-fabric
    networks:
      ${SC_NETWORK_NAME}:
        aliases:
          - ${SC_ORG1_P1_FQDN}
    ports:
      - ${SC_ORG1_P1_PORT}:${SC_ORG1_P1_PORT}
    #   - ${SC_ORG1_P1_OPPORT}:${SC_ORG1_P1_OPPORT}
    volumes:
        - ${SC_PATH_ORGS}/peerOrganizations/${SC_ORG1_DOMAIN}/peers/${SC_ORG1_P1_FQDN}:/etc/hyperledger/fabric
        - ${SC_PATH_CHAINS}/${SC_ORG1_NAME}/${SC_ORG1_P1_NAME}:/var/hyperledger/production
        - ${SC_PATH_CONF}/peercfg:/etc/hyperledger/peercfg
        # - ${DOCKER_SOCK}:/host/var/run/docker.sock
        # - /var/run/:/host/var/run/
    working_dir: /root

  ${SC_ORG1_C1_NAME}:
    environment:
      - COUCHDB_USER=${SC_COUCHDB_USER}
      - COUCHDB_PASSWORD=${SC_COUCHDB_PASSWORD}
    deploy:                                                                                                                                                                                                
      replicas: 1
      placement:
        constraints: [node.hostname == ${SC_ORG1_C1_WORKER}]
      restart_policy:
        condition: any 
        delay: ${SC_SWARM_DELAY}s
        max_attempts: 5
    hostname: ${SC_ORG1_C1_FQDN}
    image: couchdb:${SC_VERSION_COUCHDB}
    labels:
      service: hyperledger-fabric
    networks:
      ${SC_NETWORK_NAME}:
        aliases:
          - ${SC_ORG1_C1_FQDN}
    ports:
      - "${SC_ORG1_C1_PORT}:5984"

  # endregion: P1 + C1
  # region: P2 + C2

  ${SC_ORG1_P2_NAME}:
    command: peer node start
    depends_on:
      - ${SC_ORG1_C2_FQDN}
    deploy:                                                                                                                                                                                                
      placement:
        constraints: [ node.hostname == ${SC_ORG1_P2_WORKER} ]
      replicas: 1
      restart_policy:
        condition: any 
        delay: ${SC_SWARM_DELAY}s
        max_attempts: 5
    environment:
      - FABRIC_CFG_PATH=/etc/hyperledger/peercfg
      - FABRIC_LOGGING_SPEC=${SC_FABRIC_LOGLEVEL}
      #- FABRIC_LOGGING_SPEC=DEBUG
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_PROFILE_ENABLED=false
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      # Peer specific variables
      - CORE_PEER_ID=${SC_ORG1_P2_FQDN}
      - CORE_PEER_ADDRESS=${SC_ORG1_P2_FQDN}:${SC_ORG1_P2_PORT}
      - CORE_PEER_LISTENADDRESS=0.0.0.0:${SC_ORG1_P2_PORT}
      - CORE_PEER_CHAINCODEADDRESS=${SC_ORG1_P2_FQDN}:${SC_ORG1_P2_CHAINPORT}
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:${SC_ORG1_P2_CHAINPORT}
      - CORE_PEER_GOSSIP_BOOTSTRAP=${SC_ORG1_P2_FQDN}:${SC_ORG1_P2_PORT}
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=${SC_ORG1_P2_FQDN}:${SC_ORG1_P2_PORT}
      - CORE_PEER_LOCALMSPID=${SC_ORG1_NAME}MSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/msp
      - CORE_OPERATIONS_LISTENADDRESS=${SC_ORG1_P2_FQDN}:${SC_ORG1_P2_OPPORT}
      - CORE_METRICS_PROVIDER=prometheus
      - CHAINCODE_AS_A_SERVICE_BUILDER_CONFIG={"peername":"${SC_ORG1_P2_NAME}${SC_ORG1_NAME}."}
      - CORE_CHAINCODE_EXECUTETIMEOUT=300s

      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=${SC_ORG1_C2_FQDN}:5984
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=${SC_COUCHDB_USER}
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=${SC_COUCHDB_PASSWORD}

      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${SC_NETWORK_NAME}
    hostname: ${SC_ORG1_P2_FQDN}
    image: hyperledger/fabric-peer:${SC_VERSION_FABRIC}
    labels:
      service: hyperledger-fabric
    networks:
      ${SC_NETWORK_NAME}:
        aliases:
          - ${SC_ORG1_P2_FQDN}
    # ports:
    #   - ${SC_ORG1_P2_PORT}:${SC_ORG1_P2_PORT}
    #   - ${SC_ORG1_P2_OPPORT}:${SC_ORG1_P2_OPPORT}
    volumes:
        - ${SC_PATH_ORGS}/peerOrganizations/${SC_ORG1_DOMAIN}/peers/${SC_ORG1_P2_FQDN}:/etc/hyperledger/fabric
        - ${SC_PATH_CHAINS}/${SC_ORG1_NAME}/${SC_ORG1_P2_NAME}:/var/hyperledger/production
        - ${SC_PATH_CONF}/peercfg:/etc/hyperledger/peercfg
        # - ${DOCKER_SOCK}:/host/var/run/docker.sock
        # - /var/run/:/host/var/run/
    working_dir: /root

  ${SC_ORG1_C2_NAME}:
    environment:
      - COUCHDB_USER=${SC_COUCHDB_USER}
      - COUCHDB_PASSWORD=${SC_COUCHDB_PASSWORD}
    deploy:                                                                                                                                                                                                
      replicas: 1
      placement:
        constraints: [node.hostname == ${SC_ORG1_C2_WORKER}]
      restart_policy:
        condition: any 
        delay: ${SC_SWARM_DELAY}s
        max_attempts: 5
    hostname: ${SC_ORG1_C2_FQDN}
    image: couchdb:${SC_VERSION_COUCHDB}
    labels:
      service: hyperledger-fabric
    networks:
      ${SC_NETWORK_NAME}:
        aliases:
          - ${SC_ORG1_C2_FQDN}
    ports:
      - "${SC_ORG1_C2_PORT}:5984"

  # endregion: P2 + C2
